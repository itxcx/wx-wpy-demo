<style lang="less">
  .page {
    background: #f0eff5;
    padding-top: 120rpx;
    .weui-cells {
      margin-top: 30rpx;
      &.vcode {
        .weui-cell_input {
          padding-right: 0;
          .weui-vcode-btn {
            width: 170rpx;
            text-align: center;
            &.normal {
              color: #0052CC;
            }
            &.disabled {
              color: #B2B2B2;
            }
          }
        }
      }
    }
    .button {
      color: #FFFFFF;
      background-color: #0052CC;
      margin: 50rpx 30rpx 0;
      &.button-hover {
        color: rgba(255, 255, 255, .6);
        background-color: #0047b3;
      }
      &[disabled] {
        color: rgba(255, 255, 255, .6);
        background-color: #8fb0e4;
      }
    }
  }
  page {
    background: #f0eff5;
  }
</style>

<template>
  <view class="page">
    <view hidden="{{step == 2}}">
      <form bindsubmit="checkValuesBeforeSubmitMobile">
        <view class="weui-cells weui-cells_after-title vcode">
          <child-input class="weui-cell_vcode">
            <view slot="label">
              <view class="weui-label">手机号码</view>
            </view>
            <view slot="input">
              <input name="mobile" type="number" class="weui-input" placeholder-class="placeholder-class" placeholder="请输入手机号" maxlength="11" @input="bindKeyInput('mobile')" />
            </view>
            <view class="weui-cell__ft">
              <view class="weui-vcode-btn {{sendCodeClassName}}" @tap="onTapSendCode">{{sendCodeButtonText}}</view>
            </view>
          </child-input>
        </view>
        <view class="weui-cells weui-cells_after-title">
          <child-input>
            <view slot="label">
              <view class="weui-label">验证码</view>
            </view>
            <view slot="input">
              <input name="code" type="number" class="weui-input" placeholder-class="placeholder-class" placeholder="请输入验证码" @input="bindKeyInput('code')" />
            </view>
          </child-input>
        </view>
        <button formType="submit" class="button" disabled="{{submitMobileDisabled}}" loading="{{submitMobileLoading}}">下一步</button>
      </form>
    </view>
    <view hidden="{{step == 1}}">
      <form @submit="checkValuesBeforeSubmitPassword">
        <view class="weui-cells weui-cells_after-title">
          <child-input class="weui-cell_vcode">
            <view slot="label">
              <view class="weui-label">输入密码</view>
            </view>
            <view slot="input">
              <input name="newPassword" password class="weui-input" placeholder-class="placeholder-class" placeholder="请输入6-18位密码" maxlength="18" @input="bindKeyInput('password')" />
            </view>
          </child-input>
        </view>
        <view class="weui-cells weui-cells_after-title">
          <child-input>
            <view slot="label">
              <view class="weui-label">再次输入</view>
            </view>
            <view slot="input">
              <input name="rePassword" password class="weui-input" placeholder-class="placeholder-class" placeholder="请再次输入密码" maxlength="18" @input="bindKeyInput('repassword')" />
            </view>
          </child-input>
        </view>
        <button formType="submit" class="button" disabled="{{submitPasswordDisabled}}" loading="{{submitPasswordLoading}}">重置密码</button>
      </form>
    </view>
    <toast />
  </view>
</template>

<script>
  import wepy from 'wepy'
  import Input from '../../components/input/input'
  import Toast from 'wepy-com-toast'
  import API from '../../util/api.js'
  // import _ from 'lodash'
  export default class ResetPassword extends wepy.page {
    config = {
      navigationBarTitleText: '忘记密码'
    }
    components = {
      'child-input': Input,
      toast: Toast
    }
    mixins = []
    data = {
      mobile: '',
      code: '',
      hascode: false,
      haspassword: false,
      hasrepassword: false,
      submitMobileLoading: false,
      submitPasswordLoading: false,
      step: 1,
      leftSeconds: 60,
      hasMobile: false,
      timer: 'virgin'
    }
    onPullDownRefresh(e) {
      // console.log('onPullDownRefresh...', e)
      wx.stopPullDownRefresh()
    }
    computed = {
      hasMobile() {
        this.hasMobile = this.mobile.trim().length === 11
        return !this.hasMobile
      },
      submitMobileDisabled() {
        return !(this.hasmobile && this.hascode)
      },
      submitPasswordDisabled() {
        return !(this.mobile && this.code && this.haspassword && this.hasrepassword)
      },
      sendCodeClassName() {
        this.hasmobile = this.mobile.trim().length === 11
        return !this.hasmobile || (this.timer && this.timer !== 'virgin') ? 'disabled' : 'normal'
      },
      sendCodeButtonText() {
        if (this.timer === 'virgin') {
          return '获取验证码'
        } else if (!this.timer) {
          return '再次获取'
        } else {
          return this.leftSeconds + 's'
        }
      }
    }
    onHide() {
      this.step = 1
      // this.clearTimer()
      // this.timer = 'virgin'
    }
    onShow() {
      this.step = 1
      // this.timer = 'virgin'
      // this.clearTimer()
      // this.timer = 'virgin'
    }
    methods = {
      checkValuesBeforeSubmitMobile(e) {
        // console.log(!this.submitMobileLoading)
        const that = this
        if (!this.submitMobileLoading) {
          this.submitMobileLoading = true
          let trimMobile = e.detail.value.mobile.trim()
          let trimCode = e.detail.value.code.trim()
          if (!this.checkMobile(trimMobile)) {
            this.submitMobileLoading = false
          } else if (trimCode.length !== 4) {
            this.$invoke('toast', 'show', {
              title: '请输入4位验证码'
            })
            this.submitMobileLoading = false
          } else {
            // wx.getNetworkType({
            //   success: function(res) {
            //     // 返回网络类型, 有效值：
            //     // wifi/2g/3g/4g/unknown(Android下不常见的网络类型)/none(无网络)
            //     let networkType = res.networkType
            //     if (networkType === 'none') {
            //       wx.showToast({
            //         title: '网络未连接，请检查后重试',
            //         duration: 3000
            //       })
            //       that.submitMobileLoading = false
            //       that.$apply()
            //     } else {
            //       that.submitMobile({
            //         mobile: trimMobile,
            //         code: trimCode
            //       })
            //     }
            //   }
            // })
            API.isNetWork(function suc() {
              that.submitMobile({
                mobile: trimMobile,
                code: trimCode
              })
            }, function fail() {
              that.submitMobileLoading = false
              that.$apply()
            })
          }
        }
      },
      bindKeyInput(name, e) {
        this[name] = e.detail.value
        this['has' + name] = e.detail.value.trim().length > 0
        this.$apply()
      },
      onTapSendCode() {
        let self = this
        if (self.hasmobile && (self.timer === 'virgin' || !self.timer)) {
          if (self.checkMobile()) {
            self.sendCode()
          }
        }
      },
      checkValuesBeforeSubmitPassword(e) {
        const that = this
        if (!this.submitPasswordLoading) {
          this.submitPasswordLoading = true
          let trimPassword = e.detail.value.newPassword.trim()
          let trimRePassword = e.detail.value.rePassword.trim()
          if (trimPassword.length < 6 || trimRePassword.length < 6) {
            this.$invoke('toast', 'show', {
              title: '密码长度位6-18位'
            })
            this.submitPasswordLoading = false
          } else if (trimPassword !== trimRePassword) {
            this.$invoke('toast', 'show', {
              title: '两次输入密码不一致'
            })
            this.submitPasswordLoading = false
          } else {
            // wx.getNetworkType({
            //   success: function(res) {
            //     // 返回网络类型, 有效值：
            //     // wifi/2g/3g/4g/unknown(Android下不常见的网络类型)/none(无网络)
            //     let networkType = res.networkType
            //     if (networkType === 'none') {
            //       wx.showToast({
            //         title: '网络未连接，请检查后重试',
            //         duration: 3000
            //       })
            //       that.submitPasswordLoading = false
            //       that.$apply()
            //     } else {
            //       that.submitPassword({
            //         newPassword: trimPassword
            //       })
            //     }
            //   }
            // })
            API.isNetWork(function suc() {
              that.submitPassword({
                newPassword: trimPassword
              })
            }, function fail() {
              that.submitPasswordLoading = false
              that.$apply()
            })
          }
        }
      }
    }
    checkMobile(mobile = this.mobile) {
      let result = mobile.trim().search(/^(13[0-9]|14[0-9]|15[0-9]|17[0-9]|18[0-9])\d{8}$/i) !== -1
      if (!result) {
        this.$invoke('toast', 'show', {
          title: '请输入正确的手机号'
        })
      }
      return result
    }
    sendCode() {
      let self = this
      wepy.request({
        url: API.HOST_URI + API.sendMsgCode,
        data: {
          mobile: self.mobile,
          type: 1
        },
        success(res) {
          API.validateLogIn(res.data.status.code, function() {
            self.$invoke('toast', 'show', {
              title: '验证已发送，请注意查收'
            })
            self.setTimer()
          }, function(code) {
            self.$invoke('toast', 'show', {
              title: res.data.status.desc
            })
            return true
          })
          self.$apply()
        },
        fail(res) {
          const str = res && res.errMsg
          if (str.indexOf('timeout') !== -1) {
            wx.showToast({
              title: '请求超时',
              duration: 3000
            })
          }
        }
      })
    }
    setTimer() {
      let self = this
      this.timer = setInterval(() => {
        if (self.leftSeconds) {
          --self.leftSeconds
          self.$apply()
        } else {
          self.clearTimer()
        }
      }, 1000)
    }
    clearTimer() {
      this.timer && clearInterval(this.timer)
      this.timer = null
      this.leftSeconds = 60
      this.$apply()
    }
    submitMobile(params) {
      let self = this
      // console.log('submitMobile...', params)
      wepy.request({
        url: API.HOST_URI + API.validMsgCode,
        data: Object.assign({
          type: 1
        }, params),
        success(res) {
          API.validateLogIn(res.data.status.code, function() {
            self.code = params.code
            self.step = 2
            wepy.setNavigationBarTitle({
              title: '重置密码'
            })
            self.submitMobileLoading = false
            self.$apply()
          }, function(code) {
            self.$invoke('toast', 'show', {
              title: res.data.status.desc
            })
            self.submitMobileLoading = false
            self.$apply()
            return true
          })
        },
        fail(res) {
          const str = res && res.errMsg
          if (str.indexOf('timeout') !== -1) {
            wx.showToast({
              title: '请求超时',
              duration: 3000
            })
            self.submitMobileLoading = false
            self.$apply()
          }
        }
      })
    }
    submitPassword(params) {
      let that = this
      // console.log('submitPassword...')
      wepy.request({
        url: API.HOST_URI + API.resetPassword,
        data: Object.assign({
          mobile: this.mobile,
          code: this.code
        }, params),
        success(res) {
          API.validateLogIn(res.data.status.code, function() {
            that.step = 1
            that.submitPasswordLoading = false
            that.$apply()
            that.$invoke('toast', 'show', {
              title: '重置密码成功'
            }).then((res) => {
              wepy.redirectTo({
                url: '../login/login'
              })
            })
          }, function(code) {
            self.$invoke('toast', 'show', {
              title: res.data.status.desc
            })
          })
        },
        fail(res) {
          const str = res && res.errMsg
          if (str.indexOf('timeout') !== -1) {
            wx.showToast({
              title: '请求超时',
              duration: 3000
            })
          }
        }
      })
    }
  }
</script>
